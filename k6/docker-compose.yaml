version: '3.8'

networks:
  k6:

services:
  # influxdb:
  #   image: influxdb:latest
  #   networks:
  #     - k6
  #     - grafana
  #   ports:
  #     - "8086:8086"
  #   environment:
  #     - INFLUXDB_DB=k6
  # grafana:
  #   image: grafana/grafana:latest
  #   networks:
  #     - k6
  #   ports:
  #     - "3003:3000"
  #   environment:
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_BASIC_ENABLED=false
  #   volumes:
  #     - $PWD/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  pluto:
    image: europe-west3-docker.pkg.dev/hoprassociation/docker-images/hopr-pluto:${HOPRD_DOCKER_IMAGE}
    hostname: pluto
    container_name: pluto
    pull_policy: always
    mem_reservation: 1g
    mem_limit: 4g
    restart: on-failure
    networks:
      - k6
    ports:
      # hoprd Rest API ports
      - 13301:13301
      - 13302:13302
      - 13303:13303
      - 13304:13304
      - 13305:13305
    expose:
      - 13301
      - 13302
      - 13303
      - 13304
      - 13305
    environment:
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
  k6:
    image: europe-west3-docker.pkg.dev/hoprassociation/docker-images/hoprd-k6:latest
    hostname: k6
    container_name: k6
    # pull_policy: always
    networks:
      - k6
    ports:
      - 6565:6565
    depends_on:
      pluto:
        condition: service_healthy
    # tty: true
    # entrypoint: /usr/bin/tail
    # command: "-f /dev/null"
    command:
      - run
      - ./constant-traffic.test.js
    environment:
      - ENVIRONMENT_NAME=pluto
      - WORKLOAD_NAME=simple
      - HOPRD_API_TOKEN=${HOPRD_API_TOKEN}
      - K6_PROMETHEUS_RW_SERVER_URL=https://prometheus.stage.hoprtech.net/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
      - K6_OUT=xk6-prometheus-rw
      # - K6_OUT=influxdb=http://influxdb:8086/k6
